{"ast":null,"code":"var _jsxFileName = \"/home/amliebeq/Developement/code/phaseTwoProject/src/components/Dictionary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dictionary(_ref) {\n  _s();\n  let {\n    sayingObjs\n  } = _ref;\n  const [filterValue, setFilterValue] = useState('');\n  const [filterList, setFilterList] = useState(sayingObjs);\n  function handleFilterChange(e) {\n    setFilterValue(e.target.value);\n    setFilterList(sayingObjs.filter(obj => {\n      obj.jargon.toLowerCase().includes(filterValue.toLowerCase());\n    }));\n  }\n  console.log(filterList);\n  const makeList = filterList.map(saying => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      jargon: saying.jargon,\n      definition: saying.definition,\n      sentence: saying.sentence,\n      image: saying.image,\n      id: saying.id\n    }, saying.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  if (!filterList) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"items\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Master corporate jargon dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item list\",\n      className: \"row\",\n      children: makeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Dictionary, \"R85hz9OmsogL0G8/PZ1rJGkpq6c=\");\n_c = Dictionary;\nexport default Dictionary;\nvar _c;\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","Card","Filter","jsxDEV","_jsxDEV","Dictionary","_ref","_s","sayingObjs","filterValue","setFilterValue","filterList","setFilterList","handleFilterChange","e","target","value","filter","obj","jargon","toLowerCase","includes","console","log","makeList","map","saying","definition","sentence","image","id","fileName","_jsxFileName","lineNumber","columnNumber","children","onFilterChange","className","_c","$RefreshReg$"],"sources":["/home/amliebeq/Developement/code/phaseTwoProject/src/components/Dictionary.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Card from './Card'\nimport Filter from './Filter'\n\nfunction Dictionary({ sayingObjs }) {\n    const [filterValue, setFilterValue] = useState('')\n    const [filterList, setFilterList] = useState(sayingObjs)\n\n    function handleFilterChange (e) {\n        setFilterValue(e.target.value)\n        setFilterList(sayingObjs.filter((obj) => {obj.jargon.toLowerCase().includes(filterValue.toLowerCase())}))\n    }\n    console.log(filterList)\n\n    const makeList= filterList.map((saying) => {\n        return(\n            <Card key={saying.id} jargon={saying.jargon} definition={saying.definition} sentence={saying.sentence} image={saying.image} id={saying.id}/>\n        )\n    })\n\n    \n\n    if (!filterList) {\n        return <h2>Loading...</h2>\n    }\n\n    return (\n        <div id='items'>\n            <h1>Master corporate jargon dictionary</h1>\n            <Filter onFilterChange={handleFilterChange}/>\n            <div id='item list' className='row'>\n                {makeList}\n            </div>\n        </div>\n    )\n}\n\nexport default Dictionary"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,UAAUA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACQ,UAAU,CAAC;EAExD,SAASK,kBAAkBA,CAAEC,CAAC,EAAE;IAC5BJ,cAAc,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BJ,aAAa,CAACJ,UAAU,CAACS,MAAM,CAAEC,GAAG,IAAK;MAACA,GAAG,CAACC,MAAM,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACZ,WAAW,CAACW,WAAW,EAAE,CAAC;IAAA,CAAC,CAAC,CAAC;EAC7G;EACAE,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC;EAEvB,MAAMa,QAAQ,GAAEb,UAAU,CAACc,GAAG,CAAEC,MAAM,IAAK;IACvC,oBACItB,OAAA,CAACH,IAAI;MAAiBkB,MAAM,EAAEO,MAAM,CAACP,MAAO;MAACQ,UAAU,EAAED,MAAM,CAACC,UAAW;MAACC,QAAQ,EAAEF,MAAM,CAACE,QAAS;MAACC,KAAK,EAAEH,MAAM,CAACG,KAAM;MAACC,EAAE,EAAEJ,MAAM,CAACI;IAAG,GAA/HJ,MAAM,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAwH;EAEpJ,CAAC,CAAC;EAIF,IAAI,CAACvB,UAAU,EAAE;IACb,oBAAOP,OAAA;MAAA+B,QAAA,EAAI;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC9B;EAEA,oBACI9B,OAAA;IAAK0B,EAAE,EAAC,OAAO;IAAAK,QAAA,gBACX/B,OAAA;MAAA+B,QAAA,EAAI;IAAkC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3C9B,OAAA,CAACF,MAAM;MAACkC,cAAc,EAAEvB;IAAmB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC7C9B,OAAA;MAAK0B,EAAE,EAAC,WAAW;MAACO,SAAS,EAAC,KAAK;MAAAF,QAAA,EAC9BX;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAAC3B,EAAA,CA/BQF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAiCnB,eAAeA,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}