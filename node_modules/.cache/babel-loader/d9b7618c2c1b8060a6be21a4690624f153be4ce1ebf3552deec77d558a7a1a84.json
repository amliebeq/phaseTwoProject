{"ast":null,"code":"var _jsxFileName = \"/home/amliebeq/Developement/code/phaseTwoProject/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const history = useHistory();\n  const [jargon, setJargon] = useState('');\n  const [definition, setDefinition] = useState('');\n  const [sentence, setSentence] = useState('');\n  const [image, setImage] = useState('');\n  function handleJargonChange(e) {\n    setJargon(e.target.value);\n  }\n  function handleDefinitionChange(e) {\n    setDefinition(e.target.value);\n  }\n  function handleSentenceChange(e) {\n    setSentence(e.target.value);\n  }\n  function handleImageChange(e) {\n    setImage(e.target.value);\n  }\n  function handleSubmit(e) {\n    const data = {\n      jargon: jargon,\n      definition: definition,\n      sentence: sentence,\n      image: image\n    };\n    fetch('http://localhost:4000/doubleSpeak', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(r => r.json()).then(newItem => console.log(newItem));\n    setJargon('');\n    setDefinition('');\n    setSentence('');\n    setImage('');\n    history.push('/dictionary');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add your new term here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Doublespeak Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: jargon,\n        onChange: handleJargonChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: definition,\n        onChange: handleDefinitionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Use the phrase in a sentence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sentence,\n        onChange: handleSentenceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gif or image link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: image,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"VONGx5liEY2+zPryhb8L1HX0MqU=\", false, function () {\n  return [useHistory];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Form","_s","history","jargon","setJargon","definition","setDefinition","sentence","setSentence","image","setImage","handleJargonChange","e","target","value","handleDefinitionChange","handleSentenceChange","handleImageChange","handleSubmit","data","fetch","method","headers","body","JSON","stringify","then","r","json","newItem","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/amliebeq/Developement/code/phaseTwoProject/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction Form() {\n    const history=useHistory()\n    const [jargon, setJargon] = useState('')\n    const [definition, setDefinition] = useState('')\n    const [sentence, setSentence] = useState('')\n    const [image, setImage] = useState('')\n\n    function handleJargonChange(e) {\n        setJargon(e.target.value)\n    }\n\n    function handleDefinitionChange(e) {\n        setDefinition(e.target.value)\n    }\n\n    function handleSentenceChange(e) {\n        setSentence(e.target.value)\n    }\n\n    function handleImageChange(e) {\n        setImage(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        const data = {\n            jargon: jargon,\n            definition: definition,\n            sentence: sentence,\n            image: image,\n        }\n        fetch('http://localhost:4000/doubleSpeak', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then ((r) => r.json())\n        .then((newItem) => console.log(newItem))\n        setJargon('')\n        setDefinition('')\n        setSentence('')\n        setImage('')\n        history.push('/dictionary')\n    }\n\n    return (\n        <div>\n            <h1>Add your new term here</h1>\n            <form onSubmit={handleSubmit}>\n                <label>Doublespeak Phrase</label>\n                <input type='text' value={jargon} onChange={handleJargonChange}/>\n                <label>Definition</label>\n                <input type='text' value={definition} onChange={handleDefinitionChange}/>\n                <label>Use the phrase in a sentence</label>\n                <input type='text' value={sentence} onChange={handleSentenceChange} />\n                <label>Gif or image link</label>\n                <input type='text' value={image} onChange={handleImageChange} />\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}